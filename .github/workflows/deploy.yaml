name: Deploy to Kubernetes

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker
        run: |
          gcloud auth configure-docker

      - name: Build Docker Images
        env:
          DOCKER_BUILDKIT: 1
          CLOUD_SQL_CONNECTION_NAME: "${{ secrets.CLOUD_SQL_CONNECTION_NAME }}"
          DB_PORT: "${{ secrets.DB_PORT }}"
          DB_PASSWORD: "${{ secrets.DB_PASSWORD }}"
          DB_NAME: "${{ secrets.DB_NAME }}"
          DB_USER: "${{ secrets.DB_USER }}"
          SECRET_KEY: "${{ secrets.SECRET_KEY }}"
          ALGORITHM: "${{ secrets.ALGORITHM }}"
          MAIL_API_KEY: "${{ secrets.MAIL_API_KEY }}"
          EMAIL_TEMPLATE_ID: "${{ secrets.EMAIL_TEMPLATE_ID }}"
          PASSWORD_SALT: "${{ secrets.PASSWORD_SALT }}"
          FROM_EMAIL: "info@destinationsurf.com"
          ACCESS_TOKEN_EXPIRE_MINUTES: 5
        run: |
          docker-compose -f docker-compose-gcp.yml build
          # Tag the images with the registry name and version
          docker tag backend:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest
          docker tag frontend:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest

      - name: Docker push
        run: |
          # Push the images to GCP Container Registry
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Apply Kubernetes Configuration
        run: |
          gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }} --zone ${{ secrets.ZONE }}
          # Update the Kubernetes configuration files to use the new image names
          sed -i 's|gcr.io/$${PROJECT_ID}/backend|gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend|g' k8s/backend_deployment.yaml
          sed -i 's|gcr.io/$${PROJECT_ID}/frontend|gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend|g' k8s/frontend_deployment.yaml
          kubectl apply -f k8s/backend_deployment.yaml
          kubectl apply -f k8s/backend_service.yaml
          kubectl apply -f k8s/frontend_deployment.yaml
          kubectl apply -f k8s/frontend_service.yaml
